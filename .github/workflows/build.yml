name: Build Android APK (Final Fix)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-17-jdk git zip unzip p7zip-full autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtcl8.6 libsqlite3-dev libssl-dev libgdbm-dev libbz2-dev libreadline-dev libffi-dev liblzma-dev
          python -m pip install --upgrade pip
          pip install "cython<3.0" buildozer

      - name: Manually Set Up Android SDK and NDK
        run: |
          # دانلود و آماده‌سازی SDK
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O $HOME/cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -q $HOME/cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest

          # --- بخش کلیدی اصلاح شده ---
          # ۱. مسیر را برای دستورات همین مرحله آپدیت می‌کنیم
          export PATH="$HOME/android-sdk/cmdline-tools/latest/bin:$PATH"
          
          # ۲. مسیر را برای مراحل بعدی در workflow ماندگار می‌کنیم
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          # ---------------------------

          # حالا که مسیر صحیح است، دستورات sdkmanager را اجرا می‌کنیم
          yes | sdkmanager --licenses > /dev/null
          sdkmanager "build-tools;33.0.2" "platforms;android-31" "platform-tools"
          
          # مسیر build-tools را هم برای مراحل بعدی ماندگار می‌کنیم
          echo "$HOME/android-sdk/build-tools/33.0.2" >> $GITHUB_PATH

          # دانلود و آماده‌سازی NDK
          wget https://dl.google.com/android/repository/android-ndk-r25b-linux.zip -O $HOME/ndk.zip
          unzip -q $HOME/ndk.zip -d $HOME/
          echo "ANDROID_NDK_HOME=$HOME/android-ndk-r25b" >> $GITHUB_ENV

      - name: Create buildozer.spec
        run: |
          cat <<EOF > buildozer.spec
          [app]
          title = Kos VPN
          package.name = kosvpn
          package.domain = org.kosvpn
          source.dir = .
          version = 1.0
          requirements = python3,kivy==2.3.0,https://github.com/kivymd/KivyMD/archive/master.zip,pillow,hostopenssl,openssl
          orientation = portrait
          icon.filename = %(source.dir)s/logo.png
          
          [buildozer]
          log_level = 2
          warn_on_root = 1

          [android]
          fullscreen = 0
          android.api = 31
          android.minapi = 21
          android.permissions = INTERNET
          android.ndk_path = /home/runner/android-ndk-r25b
          android.sdk_path = /home/runner/android-sdk
          EOF

      - name: Build with Buildozer
        run: buildozer -v android debug

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Kos_VPN-APK
          path: bin/*.apk
          if-no-files-found: error
